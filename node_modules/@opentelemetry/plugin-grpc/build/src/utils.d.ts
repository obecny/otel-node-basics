import { CanonicalCode, Status } from '@opentelemetry/api';
import * as grpcTypes from 'grpc';
import { IgnoreMatcher } from './types';
export declare const findIndex: <T>(args: T[], fn: (arg: T) => boolean) => number;
/**
 * Convert a grpc status code to an opentelemetry Canonical code. For now, the enums are exactly the same
 * @param status
 */
export declare const _grpcStatusCodeToCanonicalCode: (status?: grpcTypes.status | undefined) => CanonicalCode;
export declare const _grpcStatusCodeToSpanStatus: (status: number) => Status;
/**
 * Returns true if the metadata contains
 * the opentelemetry outgoing request header.
 */
export declare const _containsOtelMetadata: (metadata: grpcTypes.Metadata) => boolean;
/**
 * Returns true if the current plugin configuration
 * ignores the given method.
 * @param methodName the name of the method
 * @param ignoredMethods a list of matching patterns
 * @param onException an error handler for matching exceptions
 */
export declare const _methodIsIgnored: (methodName: string, ignoredMethods?: IgnoreMatcher[] | undefined) => boolean;
//# sourceMappingURL=utils.d.ts.map