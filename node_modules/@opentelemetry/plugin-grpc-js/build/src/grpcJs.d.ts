import type * as grpcJs from '@grpc/grpc-js';
import { BasePlugin } from '@opentelemetry/core';
import { Tracer, Logger } from '@opentelemetry/api';
import { GrpcPluginOptions } from './types';
/**
 * @grpc/grpc-js gRPC instrumentation plugin for Opentelemetry
 * https://www.npmjs.com/package/@grpc/grpc-js
 */
export declare class GrpcJsPlugin extends BasePlugin<typeof grpcJs> {
    readonly moduleName: string;
    static readonly component = "@grpc/grpc-js";
    readonly supportedVersions: string[];
    protected _config: GrpcPluginOptions;
    constructor(moduleName: string);
    /**
     * @internal
     * Public reference to the protected BasePlugin `_tracer` instance to be used by this
     * plugin's external helper functions
     */
    get tracer(): Tracer;
    /**
     * @internal
     * Public reference to the protected BasePlugin `_logger` instance to be used by this
     * plugin's external helper functions
     */
    get logger(): Logger;
    protected patch(): typeof grpcJs;
    protected unpatch(): void;
}
export declare const plugin: GrpcJsPlugin;
//# sourceMappingURL=grpcJs.d.ts.map