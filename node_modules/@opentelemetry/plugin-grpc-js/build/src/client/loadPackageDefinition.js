"use strict";
/*
 * Copyright The OpenTelemetry Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.patchLoadPackageDefinition = void 0;
const shimmer = require("shimmer");
const utils_1 = require("./utils");
/**
 * Entry point for client patching for grpc.loadPackageDefinition(...)
 * @param this - GrpcJsPlugin
 */
function patchLoadPackageDefinition() {
    return (original) => {
        const plugin = this;
        plugin._logger.debug('patching loadPackageDefinition');
        return function patchedLoadPackageDefinition(packageDef) {
            const result = original.call(this, packageDef);
            _patchLoadedPackage.call(plugin, result);
            return result;
        };
    };
}
exports.patchLoadPackageDefinition = patchLoadPackageDefinition;
/**
 * Utility function to patch *all* functions loaded through a proto file.
 * Recursively searches for Client classes and patches all methods, reversing the
 * parsing done by grpc.loadPackageDefinition
 * https://github.com/grpc/grpc-node/blob/1d14203c382509c3f36132bd0244c99792cb6601/packages/grpc-js/src/make-client.ts#L200-L217
 */
function _patchLoadedPackage(result) {
    Object.values(result).forEach(service => {
        if (typeof service === 'function') {
            shimmer.massWrap(service.prototype, utils_1.getMethodsToWrap.call(this, service, service.service), utils_1.getPatchedClientMethods.call(this));
        }
        else if (typeof service.format !== 'string') {
            // GrpcObject
            _patchLoadedPackage.call(this, service);
        }
    });
}
//# sourceMappingURL=loadPackageDefinition.js.map