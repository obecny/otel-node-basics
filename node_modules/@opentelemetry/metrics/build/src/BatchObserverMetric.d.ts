import * as api from '@opentelemetry/api';
import { InstrumentationLibrary } from '@opentelemetry/core';
import { Resource } from '@opentelemetry/resources';
import { BoundObserver } from './BoundInstrument';
import { Batcher } from './export/Batcher';
import { MetricRecord } from './export/types';
import { Metric } from './Metric';
/** This is a SDK implementation of Batch Observer Metric. */
export declare class BatchObserverMetric extends Metric<BoundObserver> implements api.BatchObserver {
    private readonly _batcher;
    private _callback;
    private _maxTimeoutUpdateMS;
    constructor(name: string, options: api.BatchMetricOptions, _batcher: Batcher, resource: Resource, instrumentationLibrary: InstrumentationLibrary, callback?: (observerResult: api.BatchObserverResult) => void);
    protected _makeInstrument(labels: api.Labels): BoundObserver;
    getMetricRecord(): Promise<MetricRecord[]>;
}
//# sourceMappingURL=BatchObserverMetric.d.ts.map